"use strict";(self.webpackChunkqava_docs=self.webpackChunkqava_docs||[]).push([[5232],{5319:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>x});var i=n(5893),l=n(1151);const s={sidebar_position:5},r="@qavajs/steps-files",c={id:"Steps/files",title:"@qavajs/steps-files",description:"Step library to work with file system",source:"@site/docs/Steps/files.md",sourceDirName:"Steps",slug:"/Steps/files",permalink:"/docs/Steps/files",draft:!1,unlisted:!1,editUrl:"https://github.com/qavajs/qavajs.github.io/tree/main/docs/Steps/files.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"@qavajs/steps-memory",permalink:"/docs/Steps/memory"},next:{title:"@qavajs/steps-sql",permalink:"/docs/Steps/sql"}},d={},x=[{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Parameter types",id:"parameter-types",level:2},{value:"fileValidation",id:"filevalidation",level:3},{value:"Wait Steps",id:"wait-steps",level:2},{value:"I wait until file matching {string} regexp appears in {string}",id:"i-wait-until-file-matching-string-regexp-appears-in-string",level:3},{value:"I wait until {string} file appears",id:"i-wait-until-string-file-appears",level:3},{value:"Validation Steps",id:"validation-steps",level:2},{value:"I expect {string} text file content {fileValidation} {string}",id:"i-expect-string-text-file-content-filevalidation-string",level:3},{value:"Memory Steps",id:"memory-steps",level:2},{value:"I save {string} file content as {string}",id:"i-save-string-file-content-as-string",level:3},{value:"I save {string} text file content as {string}",id:"i-save-string-text-file-content-as-string",level:3},{value:"I save {string} Excel file content as {string}",id:"i-save-string-excel-file-content-as-string",level:3},{value:"I save {string} pdf file content as {string}",id:"i-save-string-pdf-file-content-as-string",level:3},{value:"I save {string} Word file content as {string}",id:"i-save-string-word-file-content-as-string",level:3},{value:"I save {string} csv file content as {string}",id:"i-save-string-csv-file-content-as-string",level:3}];function a(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"qavajssteps-files",children:"@qavajs/steps-files"}),"\n",(0,i.jsx)(t.p,{children:"Step library to work with file system"}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"npm install @qavajs/steps-files\n"})}),"\n",(0,i.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"module.exports = {\n    default: {\n        require: [\n            'node_modules/@qavajs/steps-files/index.js'\n        ],\n        // add fileTimeout property in case you need to customize built-in interval and timeout\n        fileTimeout: {\n            interval: 1000,\n            timeout: 1000\n        }\n    }\n}\n\n"})}),"\n",(0,i.jsx)(t.h2,{id:"parameter-types",children:"Parameter types"}),"\n",(0,i.jsx)(t.h3,{id:"filevalidation",children:"fileValidation"}),"\n",(0,i.jsxs)(t.p,{children:["validation of values (can be negated with ",(0,i.jsx)(t.em,{children:"not"}),")"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"to be equal"}),"\n",(0,i.jsx)(t.li,{children:"to be strictly equal"}),"\n",(0,i.jsx)(t.li,{children:"to be deeply equal"}),"\n",(0,i.jsx)(t.li,{children:"to have member"}),"\n",(0,i.jsx)(t.li,{children:"to be match"}),"\n",(0,i.jsx)(t.li,{children:"to contain"}),"\n",(0,i.jsx)(t.li,{children:"to be above"}),"\n",(0,i.jsx)(t.li,{children:"to be below"}),"\n",(0,i.jsx)(t.li,{children:"to be greater than"}),"\n",(0,i.jsx)(t.li,{children:"to be less than"}),"\n",(0,i.jsx)(t.li,{children:"to have type"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"wait-steps",children:"Wait Steps"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"i-wait-until-file-matching-string-regexp-appears-in-string",children:"I wait until file matching {string} regexp appears in {string}"}),"\n",(0,i.jsx)(t.p,{children:"Wait until file matching regexp appear in directory"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"param"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"example"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file name regex to wait"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"f.+.txt"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"dir"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"directory path to wait"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"./yourFolder"})]})]})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-gherkin",children:"When I wait until file matching 'f.+\\.txt' regexp appears in './test-e2e/folder'\nWhen I wait until file matching '$fileRegexp' regexp appears in '$folder'\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"i-wait-until-string-file-appears",children:"I wait until {string} file appears"}),"\n",(0,i.jsx)(t.p,{children:"Wait until file appear"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"param"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"example"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file path to wait"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"./yourFolder/file.txt"})]})})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-gherkin",children:"When I wait until './test-e2e/folder/file.txt' file appears\nWhen I wait until '$filePath' file appears\n"})}),"\n",(0,i.jsx)(t.h2,{id:"validation-steps",children:"Validation Steps"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"i-expect-string-text-file-content-filevalidation-string",children:"I expect {string} text file content {fileValidation} {string}"}),"\n",(0,i.jsx)(t.p,{children:"Verify that text file content satisfy validation"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"param"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"example"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file path"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"./yourFolder/file.txt"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"validationType"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file path"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"to be equal, to contain"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"expectedValue"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"expected value"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"text, $value"})]})]})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-gherkin",children:"When I expect './folder/file.txt' text file content to be equal 'file content'\nWhen I expect '$filePath' text file content to contain '$content'\n"})}),"\n",(0,i.jsx)(t.h2,{id:"memory-steps",children:"Memory Steps"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"i-save-string-file-content-as-string",children:"I save {string} file content as {string}"}),"\n",(0,i.jsx)(t.p,{children:"Save file content to memory as buffer"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"param"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"example"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file path"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"./yourFolder/file.jpeg"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memoryKey"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memory key"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"fileContent, value"})]})]})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-gherkin",children:"When I save './folder/file.txt' file content as 'fileContent'\nWhen I save '$filePath' file content as 'fileContent'\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"i-save-string-text-file-content-as-string",children:"I save {string} text file content as {string}"}),"\n",(0,i.jsx)(t.p,{children:"Save file content to memory as text (utf-8)"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"param"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"example"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file path"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"./yourFolder/file.txt"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memoryKey"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memory key"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"textContent, value"})]})]})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-gherkin",children:"When I save './folder/file.txt' text file content as 'fileContent'\nWhen I save '$filePath' text file as 'fileContent'\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"i-save-string-excel-file-content-as-string",children:"I save {string} Excel file content as {string}"}),"\n",(0,i.jsxs)(t.p,{children:["Save file content to memory as Excel object (",(0,i.jsx)(t.a,{href:"https://www.npmjs.com/package/xlsx",children:"https://www.npmjs.com/package/xlsx"}),")"]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"param"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"example"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file path"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"./yourFolder/file.xlsx"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memoryKey"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memory key"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"excelContent, value"})]})]})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-gherkin",children:"When I save './folder/file.txt' Excel file content as 'fileContent'\nWhen I save '$filePath' Excel file as 'fileContent'\n# if you use @qavajs/steps-memory package\nThen I expect '$excelFile.Sheets.SheetName.A1.v' to be equal 'expectedValueOfCell'\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"i-save-string-pdf-file-content-as-string",children:"I save {string} pdf file content as {string}"}),"\n",(0,i.jsx)(t.p,{children:"Save file content to memory as pdf object with following properties:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"property"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"textMultiLine"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"text of pdf in multiline format"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"textSingleLine"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"text of pdf in single-line format"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"metadata"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Object"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"pdf metadata"})]})]})]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"param"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"example"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file path"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"./yourFolder/file.txt"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memoryKey"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memory key"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"textContent, value"})]})]})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-gherkin",children:"When I save './folder/file.pdf' pdf file content as 'pdfContent'\nWhen I save '$filePath' pdf file content as 'pdfContent'\n# if you use @qavajs/steps-memory package\nThen I expect '$pdfContent.textMultiLine' to be equal 'expectedPdfContent'\nThen I expect '$pdfContent.textSingleLine' to be equal 'expectedPdfContent'\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"i-save-string-word-file-content-as-string",children:"I save {string} Word file content as {string}"}),"\n",(0,i.jsx)(t.p,{children:"Save file content to memory as word object with following properties:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"property"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"textMultiLine"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"text of word document in multiline format"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"textSingleLine"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"text of word document in single-line format"})]})]})]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"param"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"example"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file path or buffer"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"./yourFolder/file.docx"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memoryKey"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memory key"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"wordContent, value"})]})]})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-gherkin",children:"When I save './folder/file.docx' Word file content as 'wordContent'\nWhen I save '$filePath' Word file content as 'wordContent'\nWhen I save '$fileBuffer' Word file content as 'wordContent'\n# if you use @qavajs/steps-memory package\nThen I expect '$wordContent.textMultiLine' to be equal 'expectedPdfContent'\nThen I expect '$wordContent.textSingleLine' to be equal 'expectedPdfContent'\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"i-save-string-csv-file-content-as-string",children:"I save {string} csv file content as {string}"}),"\n",(0,i.jsx)(t.p,{children:"Save file content to memory as csv object. First row will is considered as header."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"param"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"example"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"file path or buffer"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"./yourFolder/file.csv"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memoryKey"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"memory key"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"csvContent, value"})]})]})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-gherkin",children:"When I save './folder/file.csv' csv file content as 'csvContent'\nWhen I save '$filePath' csv file as 'csvContent'\n# if you use @qavajs/steps-memory package\nThen I expect '$csvContent[0].columnName' to be equal 'expectedValue'\n"})})]})}function h(e={}){const{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>r});var i=n(7294);const l={},s=i.createContext(l);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);